
required_inputs=(
  VM_NAME=somehostname
  IMAGE=/path/to/image
  MEMORY="how much memory to give the vm"
  MACHINE_DISK="the machines disk"
  VNC_DISPLAY="some desc"
  SWITCH_NAME="name of switch"
  PIDFILE="pidfile"
)

# parse command line inputs and ensure all required inputs are set
smart_parse $@
if ! verify_inputs required_inputs[@]; then 
  echo 
  ./help
  return 1
fi


# Generate MAC addresses
generate_mac() {
  local mac_prefix="52:"
  local mac_suffix=`(date; cat /proc/interrupts) | md5sum | sed -r 's/^(.{10}).*$/\1/; s/([0-9a-f]{2})/\1:/g; s/:$//;'`
  echo "${mac_prefix}${mac_suffix}"
}



# TODO:Sanity checks for existing record.
if get_hash /machines/$VM_NAME > /dev/null; then
  echo "Machine record for $VM_NAME already exists.  Exiting..."
  return 1
fi

# Adding new record
cat <<EOC | put_hash /machines/$HOSTNAME
image=$IMAGE
memory=$MEMORY
vnc_display=$VNC_DISPLAY
vm_name=$VM_NAME
machine_disk=$MACHINE_DISK
pidfile=$PIDFILE
switch_name=$SWITCH_NAME
macaddress_eth[0]=$(generate_mac)
macaddress_eth[1]=$(generate_mac)
macaddress_eth[2]=$(generate_mac)
macaddress_eth[3]=$(generate_mac)
EOC


# -*- mode: shell-script;  -*-

build() {
  required_inputs=(
    BUILD_STEPS
    BUILD_CHECKS
    SPOT_CHECKS
  )

  # parse command line inputs and ensure all required inputs are set
  smart_parse $@
  if ! verify_inputs required_inputs[@]; then
    echo
    return 1
  fi

  # dereference the array that was passed as the BUILD_CHECKS variable
  declare -a build_checks=("${!BUILD_CHECKS}")

  need_to_rebuild=
  for i in "${build_checks[@]}"; do 
    echo about to run $i
    if ! `eval $i` ; then
      need_to_rebuild=1
    fi
  done

  if test -z $need_to_rebuild; then 
    echo all build checks were ok so not building
    return 0
  fi

  # dereference the array that was passed as the BUILD_STEPS variable
  declare -a build_steps=("${!BUILD_STEPS}")

# we'll put something here to skip builds if they are completed
#  if ! [  -d root/lib  ] ; then
  for i in "${build_steps[@]}" ; do
      echo i is $i
      eval $i
  done
#  fi

  debug "finished install. running spot checks..."

  # dereference the array that was passed as the BUILD_STEPS variable
  declare -a spot_checks=("${!SPOT_CHECKS}")

  for i in "${spot_checks[@]}" ; do
    eval $i
  done
  
}

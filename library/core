debug() {
    if ! [[ -z "$DEVELOP" ]] ; then 
        echo $1
    fi     
}


get_md5_path() {
  if test -z "$1" ; then 
    return 1
  fi
  local md5=$1
  echo "${SHEEP_DIR}/cache/md5/${md5:(-32):2}/${md5:2}"
}


verify_cached_file() {

    if [[ -z "$1" ]]; then 
        return 1
    fi

    local MD5=$1
    local file=$(get_md5_path $1)

    if which md5sum > /dev/null ; then 
	md5_cmd=$(which md5sum)
	md5_of_file=$($md5_cmd $file | awk '{print $1}')
    elif which md5 > /dev/null ; then 
	md5_cmd=$(which md5)
	md5_of_file=$($md5_cmd $file | awk '{print $4}' )
    else
	echo "could not find md5 program"
	return 1
    fi


    if ! [ "$MD5" == "$md5_of_file"  ] ; then 
        echo md5 of $file was not correct
        echo removing file, please run again
        rm $file
        return 1
    fi 
}


machine_hash() {
    # figure out release version and add it to machine_hash
    if which lsb_release > /dev/null ; then 
	# we are probally on a linux box
	echo -e "$(lsb_release -is)"
	echo -e "$(lsb_release -rs)"
    elif which sw_vers > /dev/null ; then 
        echo -e "OS X"
	echo -e "$(sw_vers -productVersion)"
    else
	echo "Can not figure out system hash"
	return 1
    fi
    echo -e "$(uname -m)"
}

wipe_envirionment() {

  for i in $(env | awk -F"=" '{print $1}') ; do
    # stupid google chrome
    if echo $i | grep -q COM_GOOGLE_CHROME_FRAMEWORK_SERVICE_PROCESS || \
       echo $i | grep -q ^PATH || \
       echo $i | grep -q ^SHEEP_DIR || \
       echo $i | grep -q ^DEVELOP
    then 
      true
    else
      unset $i 
    fi
  done

  return 0
}


colors() { 
  # Text color variables
  txtund=$(tput sgr 0 1)    # Underline
  txtbld=$(tput bold)       # Bold
  txtred=$(tput setaf 1)    # Red
  txtgrn=$(tput setaf 2)    # Green
  txtylw=$(tput setaf 3)    # Yellow
  txtblu=$(tput setaf 4)    # Blue
  txtpur=$(tput setaf 5)    # Purple
  txtcyn=$(tput setaf 6)    # Cyan
  txtwht=$(tput setaf 7)    # White
  txtrst=$(tput sgr0)       # Text reset
# got this from http://linuxtidbits.wordpress.com/2008/08/11/output-color-on-bash-scripts/
}


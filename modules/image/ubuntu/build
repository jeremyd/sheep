

# -*- mode: shell-script -*- 

# you need to make sure the following packages are installed 
# ubuntu-virt-server ubuntu-vm-builder kvm-pxe bridge-utils syslinux squashfs-tools genisoimage libvde0 vde2 kvm

required_inputs=(
  TYPE="type of image to build (options are base, psm)"
  DESTINATION_DIR="build image in this destination directory"
) 

# parse command line inputs and ensure all required inputs are set
smart_parse $@
if ! verify_inputs required_inputs[@]; then 
  echo 
  ./help
  return 1
fi


if test -z $RELEASE; then 
  RELEASE=natty
fi 


if test -z $INSTALL_MIRROR; then 
  INSTALL_MIRROR=http://127.0.0.1:3142/ubuntu
fi 


declare -a build_steps=( 
  "sudo umount -l $DESTINATION_DIR ||:"
  "sudo rm -rf $DESTINATION_DIR"
  "sudo rm -rf $OUTFILE"
  "sudo mkdir -p $DESTINATION_DIR"
  "sudo mount -t ramfs -o size=20m ramfs $DESTINATION_DIR"
  "sudo time debootstrap --variant buildd --verbose --include=linux-image-server,linux-headers-generic,grub,acpid,vim,curl,wget,emacs23-nox,openssh-server,avahi-daemon,bash-completion,vlan $RELEASE $DESTINATION_DIR $INSTALL_MIRROR"
  "perl -pi -e "s%^127.0.1.1.*\n%%" $DESTINATION_DIR/etc/hosts"
  "echo '127.0.0.1 ubuntu.local ubuntu' >> $DESTINATION_DIR/etc/hosts"
  "chroot $DESTINATION_DIR hostname ubuntu"
  "sudo $(pwd)/setup-base $DESTINATION_DIR"
  # "cd $DESTINATION_DIR"
  # "sudo time tar -czf $OUTFILE *"
  # "cd .."
  # "sudo umount $DESTINATION_DIR"
)


declare -a build_checks=(
  "test -f $DESTINATION_DIR/etc/lsb_release"
)


declare -a spot_checks=(true)
build --build-steps build_steps[@] \
      --build-checks build_checks[@] \
      --spot-checks spot_checks[@] 


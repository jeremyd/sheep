
# -*- mode: shell-script -*- 

set -e
set -x 

# make sure you have these packages installed 
# syslinux mbr mtools


cd $SHEEP_PARENT_MODULE_DIR

image_build_dir=/tmp/image
my_dir=$SHEEP_PARENT_MODULE_DIR
my_ramdisk=$my_dir/ramdisk
image=$my_ramdisk/image
mount1=$my_dir/mnt/image1
mount2=$my_dir/mnt/image2

require image ubuntu build --destination-dir $image_build_dir
require system ramfs_umount --mount-point $my_ramdisk
require system ramfs_mount --mount-point $my_ramdisk

# clean up 
sudo umount -l $mount1 ||:
sudo umount -l $mount2 ||:
sudo kpartx -d $image ||:
rm -rf $image

dd if=/dev/zero of=$image bs=1M count=2048
sudo parted --script $image mklabel msdos
sudo parted --script $image mkpart primary 100 612
sudo parted --script $image set 1 boot on
sudo parted --script $image mkpart primary 613 2048
mapper1=/dev/mapper/`sudo kpartx -l $image | head -n 1 | awk '{print $1}'`
mapper2=/dev/mapper/`sudo kpartx -l $image | tail -n 1 | awk '{print $1}'`
sudo kpartx -a $image 

sudo mkfs.vfat -F 32 -n ubuntu $mapper1 -I
sudo mkfs.ext3 $mapper2

mkdir -p $mount1 $mount2 
sudo mount $mapper1 $mount1
sudo mount $mapper2 $mount2


echo "copying image to disk"
sudo rsync -al $image_build_dir/ $mount2/ 
sudo cp /boot/vmlinuz-2.6.38-12-generic $mount1/vmlinuz

tmp_file=/tmp/mem-$RANDOM
cat<<EOF>$tmp_file
usbhid
usb_storage
vfat
msdos
hid
EOF

sudo mv $tmp_file /etc/initramfs-tools/modules
sudo mkinitramfs -o $mount1/initrd.img

sudo umount $mount1 -l 
sudo umount $mount2 -l 


# get uuid of linux partition
eval $(blkid $mapper2 | awk '{print $2}')
sudo mount -o loop $mapper1 $mount1
tmp_file=/tmp/mem-$RANDOM
cat<<EOF>$tmp_file
default persistent
label persistent
  menu label ^Use Ubuntu in persistent mode
  kernel vmlinuz
  append initrd=initrd.img root=UUID=${UUID} --
EOF
sudo mv $tmp_file $mount1/syslinux.cfg
sudo umount $mount1

sudo syslinux -maf $mapper1
sudo install-mbr --force $image

sudo kpartx -d $image

echo "all done!"


# -*- mode: shell-script -*- 

set -e
set -x 

# make sure you have these packages installed 
# syslinux mbr mtools


cd $SHEEP_PARENT_MODULE_DIR

image_build_dir=/tmp/image

my_dir=$SHEEP_PARENT_MODULE_DIR
my_ramdisk=$my_dir/ramdisk

image1=$my_ramdisk/image1
image2=$my_ramdisk/image2

image_mount1=$my_dir/mnt/image1
image_mount2=$my_dir/mnt/image2

my_loopback_device1=$(sudo losetup -f)
my_loopback_device2=$(sudo losetup -f)

require system ramfs_umount --destination-dir $my_ramdisk
require system ramfs_mount --destination-dir $my_ramdisk

rm -rf $image1
rm -rf $image2
dd if=/dev/zero of=$image1 bs=1M count=500
dd if=/dev/zero of=$image2 bs=1M count=1500

mkfs.vfat -F 32 -n ubuntu $image1 -I
mkfs.xfs $image2

mkdir -p $image_mount1 mnt/image2

if mount | grep $image_mount1; then
  sudo umount $image_mount1
fi
if mount | grep $image_mount2; then 
  sudo umount $image_mount2
fi

sudo mount -o loop $image1 $image_mount1 
sudo mount -o loop $image2 $image_mount2


#sudo chown -R root:root $image_build_dir
echo "copying image to disk"
sudo rsync -al $image_build_dir/ $image_mount2/
sudo cp /boot/vmlinuz-2.6.38-13-server $image_mount1/vmlinuz


tmp_file=/tmp/mem-$RANDOM
cat<<EOF>$tmp_file
usbhid
usb_storage
vfat
msdos
hid
EOF

sudo mv $tmp_file /etc/initramfs-tools/modules
sudo mkinitramfs -o $image_mount1/initrd.img

sudo umount $image_mount1 -l 
sudo umount $image_mount2 -l 


# get uuid of linux partition
eval $(blkid $image2 | awk '{print $2}')
sudo mount -o loop $image1 $image_mount1
tmp_file=/tmp/mem-$RANDOM
cat<<EOF>$tmp_file
default persistent
label persistent
  menu label ^Use Ubuntu in persistent mode
  kernel vmlinuz
  append initrd=initrd.img root=UUID=${UUID} --
EOF
sudo mv $tmp_file $image_mount1/syslinux.cfg
sudo umount $image_mount1

# #sudo syslinux -maf $image1
# syslinux $image1
# sudo install-mbr --force $image1

echo "all done!"

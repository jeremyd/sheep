
required_inputs=(
  'HOSTNAME="hostname of the machine"'
  'IMAGE="path to baseimage to launch with"'
  'MEMORY="machine memory size"'
  'VNC_DISPLAY="Display to use for VNC server (eg. :1)"'
  'SWITCH_NAME="Switch name to use"'
)

# parse command line inputs 
parse_inputs $@


# make sure that all required params were set
if ! test "$(${required_inputs[*]} | tr -d ' ')" == '' ; then 
  echo all required inputs were not found. returning 1
  return 1
fi

# Generate MAC addresses
generate_mac() {
  local mac_prefix="52:"
  local mac_suffix=`(date; cat /proc/interrupts) | md5sum | sed -r 's/^(.{10}).*$/\1/; s/([0-9a-f]{2})/\1:/g; s/:$//;'`
  echo "${mac_prefix}${mac_suffix}"
}



# TODO:Sanity checks for existing record.
if get_hash /machines/$HOSTNAME > /dev/null; then
  echo "Machine record for $HOSTNAME already exists.  Exiting..."
  return 1
fi

# Adding new record
cat <<EOC | put_hash /machines/$HOSTNAME
image=$IMAGE
memory=$MEMORY
vnc_display=$VNC_DISPLAY
hostname=$HOSTNAME
machine_disk=/var/tmp/${HOSTNAME}.disk
pidfile=/var/tmp/${HOSTNAME}.pid
switch_name=$SWITCH_NAME
macaddress_eth[0]=$(generate_mac)
macaddress_eth[1]=$(generate_mac)
macaddress_eth[2]=$(generate_mac)
macaddress_eth[3]=$(generate_mac)
EOC
